
package generatedAssertions.customAssertions;

import org.springframework.samples.petclinic.model.Visit;

/**
 * {@link Visit} specific assertions - Generated by CustomAssertionGenerator.
 *
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it,
 * extend {@link AbstractVisitAssert} instead.
 */
@javax.annotation.Generated(value = "assertj-assertions-generator")
public class VisitAssert extends AbstractVisitAssert<VisitAssert, Visit> {

	/**
	 * Creates a new <code>{@link VisitAssert}</code> to make assertions on actual Visit.
	 * 
	 * @param actual
	 *            the Visit we want to make assertions on.
	 */
	public VisitAssert(final Visit actual) {
		super(actual, VisitAssert.class);
	}

	/**
	 * An entry point for VisitAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
	 * With a static import, one can write directly: <code>assertThat(myVisit)</code> and get specific assertion with code completion.
	 * 
	 * @param actual
	 *            the Visit we want to make assertions on.
	 * @return a new <code>{@link VisitAssert}</code>
	 */
	@org.assertj.core.util.CheckReturnValue
	public static VisitAssert assertThat(final Visit actual) {
		return new VisitAssert(actual);
	}
}
